version: "{branch}-ci-{build}"
os: Visual Studio 2015

environment:
  matrix:
  - MSVC_ARCH: x86
    BOOST_ROOT: C:\Libraries\boost_1_60_0
    BOOST_LIBRARYDIR: C:\Libraries\boost_1_60_0\lib32-msvc-14.0
    BOOST_INCLUDEDIR: C:\Libraries\boost_1_60_0\boost
    CMAKE_GENERATOR: 'NMake Makefiles'
    QT_DIR: C:\Qt\5.8\msvc2015
  - MSVC_ARCH: x64
    BOOST_ROOT: C:\Libraries\boost_1_60_0
    BOOST_INCLUDEDIR: C:\Libraries\boost_1_60_0\boost
    BOOST_LIBRARYDIR: C:\Libraries\boost_1_60_0\lib64-msvc-14.0
    CMAKE_GENERATOR: 'NMake Makefiles'
    QT_DIR: C:\Qt\5.8\msvc2015_64

install:
- git submodule init
- git submodule update
- set PATH=C:\Ruby200\bin;%BOOST_LIBRARYDIR%;%PATH%
- gem install bundle
- bundle install
- if defined MSVC_ARCH call "%VS140COMNTOOLS%\..\..\VC\vcvarsall.bat" %MSVC_ARCH%

build_script:
- cmake -E make_directory build
- cmake -E chdir build cmake -G "%CMAKE_GENERATOR%" -DCUKE_ENABLE_EXAMPLES=ON -DBUILD_SHARED_LIBS=ON -DBOOST_ROOT="%BOOST_ROOT%" -DBOOST_INCLUDEDIR="%BOOST_INCLUDEDIR%" -DBOOST_LIBRARYDIR="%BOOST_LIBRARYDIR%" -DCMAKE_PREFIX_PATH="%QT_DIR%" ..
- cmake --build build

test_script:
- set CTEST_OUTPUT_ON_FAILURE=ON
- cmake --build build --target test
- cmake --build build --target features
- cmake --build build --target install

after_test:
- for /r %%v in (TEST-*.xml) do curl -s -F "file=@%%v;filename=%%~nxv" https://ci.appveyor.com/api/testresults/junit/%APPVEYOR_JOB_ID%

notifications:
- provider: Email
  to:
  - '{{commitAuthorEmail}}'
  on_build_success: false
  on_build_failure: true
  on_build_status_changed: true

after_build:
  - cd C:/projects/cucumber-cpp
  - 7z a -tzip -mx9 "C:/projects/cucumber-cpp/deploy-%APPVEYOR_BUILD_VERSION%-%COMPILER%.zip" .\build\*

artifacts:
- path: *.zip
  name: builds
